{"is_source_file": true, "format": "Dart", "description": "This file defines the NoteEditorScreen widget, a Flutter UI component for creating and editing notes. It manages note data input, handles loading existing note details, and persists changes through a provider.", "external_files": ["package:flutter/material.dart", "package:notes_frontend/features/notes/data/note_model.dart", "package:notes_frontend/features/notes/providers/notes_provider.dart", "package:provider/provider.dart"], "external_methods": ["context.read<NotesProvider>().getById", "context.read<NotesProvider>().addOrUpdate", "context.read<NotesProvider>().delete"], "published": ["NoteEditorArgs", "NoteEditorScreen"], "classes": [{"name": "NoteEditorArgs", "description": "Class representing arguments required for the note editor route, specifically an optional noteId."}, {"name": "NoteEditorScreen", "description": "Stateful widget providing UI for creating and editing notes, including managing input controllers and interactions."}], "methods": [{"name": "initState", "description": "Initializes the widget state and loads existing note data if noteId is provided."}, {"name": "_initLoad", "description": "Asynchronously loads note data by ID if available and updates the UI state."}, {"name": "_saveOnPop", "description": "Handles saving the note when the user navigates back from the screen."}, {"name": "_saveNote", "description": "Commits the current note data to the provider, either creating or updating the note."}], "calls": ["context.read<NotesProvider>().getById", "context.read<NotesProvider>().addOrUpdate", "context.read<NotesProvider>().delete"], "search-terms": ["NoteEditor", "note editing UI", "Flutter note app", "notes provider", "Dart StatefulWidget"], "state": 2, "file_id": 32, "knowledge_revision": 77, "git_revision": "", "hash": "4b1fa8475c2c5c04c8ffc77b04a7e4ad", "format-version": 4, "code-base-name": "notes_frontend", "filename": "notes_frontend/lib/features/notes/ui/screens/note_editor_screen.dart", "revision_history": [{"77": ""}]}